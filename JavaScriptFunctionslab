/*Define a function, as a function expression, maxOfThreethat takes three numbers as arguments and returns the largest of them. Again, the Math.max method is not allowed.*/

const maxOfThree =(x,y,z) =>{
if(x>=y && x>=z){
    return x;
}else if (y<=z && y>=x ){
return z;

}
}
console.log(maxOfThree(1,2,9,))

//Define a function, as a function declaration, isCharAVowelthat takes a character as an argument and returns true if it is a vowel, false otherwise.*/
const isCharAVowel=(char)=>{
const vowel = ['a','e','i','o','u'];
 if(vowel.includes(char.toLowerCase)) {
 return true 
 } else {
   return false
 }
}
 
console.log(isCharAVowel('b'))

/*Define a function, as a function expression, sumArraythat takes an array of numbers and returns the sum of those numbers. For example, sumArray([2, 4, 5]);would return 11.*/

function sumArray(array) {
  let sum = 0;

  for (const item of array) {
    sum += item;
  }

  console.log(sum);
  return sum;
}

sumArray([2, 2, 3, 4,5]);





/*Define a function, as a function declaration, multiplyArraythat takes an array of numbers and returns the product those numbers. For example, multiplyArray([2, 4, 5]);would return 40.*/

function multiplyArray(array){
  let product = 1;
  
  for(let i= 0; i <array.length; i++) {
    product*=array[i];
}
  console.log(product);
  return product;
}
multiplyArray([2,2,2,2])


/*Define a function, as a function expression, numArgsthat returns the number of arguments passed to the function when called.*/
let numArgs = (...args) => {
  console.log(args.length)
}
 numArgs(3,2,6,953903,)
